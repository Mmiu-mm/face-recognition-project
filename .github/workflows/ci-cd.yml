name: Face Recognition CI/CD

on:
  push:
    branches: [ main, staging, dev ]
  pull_request:
    branches: [ main, staging ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake
        
    - name: Install Python dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install -r test_requirements.txt
        pip install black flake8 pytest-cov
        
    - name: Run code quality checks
      run: |
        python linting.py
        
    - name: Run tests with coverage
      run: |
        cd backend
        pytest tests/ -v --cov=./ --cov-report=xml --cov-report=html
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: unittests
        name: codecov-face-recognition

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/staging'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker images
      run: |
        docker build -t face-recognition-backend ./backend
        docker build -t face-recognition-frontend ./frontend
        
    - name: Run container tests
      run: |
        echo "Testing backend container..."
        docker run --rm face-recognition-backend python -c "import sys; print('Backend container: Python OK')"
        
        echo "Testing frontend container..."
        docker run --rm face-recognition-frontend nginx -t
        
    - name: Log in to Docker Hub
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Push Docker images to Docker Hub
      if: github.ref == 'refs/heads/main'
      run: |
        docker tag face-recognition-backend ${{ secrets.DOCKERHUB_USERNAME }}/face-recognition-backend:latest
        docker tag face-recognition-frontend ${{ secrets.DOCKERHUB_USERNAME }}/face-recognition-frontend:latest
        
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/face-recognition-backend:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/face-recognition-frontend:latest

  deploy-notification:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Send deployment notification
      run: |
        echo "🚀 部署完成通知"
        echo "分支: ${{ github.ref }}"
        echo "提交: ${{ github.sha }}"
        echo "触发者: ${{ github.actor }}"
        # 这里可以集成Slack、Discord、邮件等通知
        # 例如使用curl发送webhook

  mlflow-tracking:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install -r backend/requirements.txt
        
    - name: Run MLflow tracking demo
      run: |
        python mlflow_tracking.py
      env:
        MLFLOW_TRACKING_URI: ./mlflow/tracking
        MLFLOW_EXPERIMENT_NAME: face_recognition_ci